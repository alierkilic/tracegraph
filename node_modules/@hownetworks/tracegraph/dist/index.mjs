function t(t,n){return t===n?0:t<n?-1:1}function n(n,e){var r;void 0===e&&(e=null),r=null===e?function(t){return t}:"function"==typeof e?e:function(t){return t[e]};for(var o=Array.from(n),i=0;i<o.length;i++)o[i]={index:i,key:r(o[i]),value:o[i]};o.sort(function(n,e){return t(n.key,e.key)||t(n.index,e.index)});for(var a=0;a<o.length;a++)o[a]=o[a].value;return o}var e=function(t,n,e,r){this._l=t,this._r=e,this._t=n,this._b=r},r={left:{configurable:!0},top:{configurable:!0},right:{configurable:!0},bottom:{configurable:!0},x:{configurable:!0},y:{configurable:!0},cx:{configurable:!0},cy:{configurable:!0},width:{configurable:!0},height:{configurable:!0}};function o(t){return new e(t.top,t.left,t.bottom,t.right)}function i(t){var e=new Map,r=t.map(function(t){var n=t.hops.map(function(t){var n=(t.virtual?"virtual":"real")+"-"+t.nodeId,r=e.get(n)||{id:n,virtual:t.virtual,hops:[],level:0,prev:new Set,next:new Set,traceIndexes:new Set};e.set(n,r);var o=Object.assign({},t,{nodeId:n,node:r});return r.hops.push(o),r.traceIndexes.add(o.traceIndex),o});return Object.assign({},t,{hops:n})});r.forEach(function(t){for(var e=n(t.hops,"level"),r=1;r<e.length;r++){var o=e[r-1],i=e[r];i.level===o.level+1&&(i.node.prev.add(o.node),o.node.next.add(i.node))}});var o=new Map;return e.forEach(function(t){t.level=function t(n,e){if(e.has(n))return e.get(n);var r=n.hops.reduce(function(t,n){return Math.max(t,n.level)},0);return n.prev.forEach(function(n){r=Math.max(t(n,e)+1,r)}),e.set(n,r),r}(t,o),t.hops.forEach(function(n){return n.level=t.level})}),r}function a(t){var e=new Map;return n(t,"level").map(function(t){var n=t.nodeId,r=e.get(n)||0;return e.set(n,r+1),Object.assign({},t,{nodeId:r+"-"+n})})}function u(t,e){var r=new Map;return t.forEach(function(t){var n=Infinity;t.traceIndexes.forEach(function(t){n=Math.min(n,e[t])}),r.set(t,n)}),n(t,function(t){return r.get(t)})}function f(t,e){return n(t,function(t){return e[t.traceIndex]})}function c(t,e){var r,o,c,h,s=i(function(t){return t.map(function(t){var e=[],r=n(t.hops,"level");return r.forEach(function(t,n){if(n>0)for(var o=r[n-1],i=o.level+1;i<t.level;i++)e.push(Object.assign({},o,{level:i,virtual:!0,nodeId:i+"-"+o.nodeId}));e.push(Object.assign({},t,{nodeId:t.level+"-"+t.nodeId}))}),Object.assign({},t,{hops:e})})}(i(t.map(function(n,r){return{hops:a(n.hops.map(function(o,i){return{traceIndex:r,hopIndex:i,nodeId:e.nodeId(o,i,n,r,t),node:null,defined:e.hopDefined(o,i,n,r,t),level:e.hopLevel(o,i,n,r,t),virtual:!1,origHop:o}}))}})))).map(function(t){return Object.assign({},t,{hops:n(t.hops,"level")})}),d=function(t){var n=0;t.forEach(function(t){t.hops.forEach(function(t){n=Math.max(n,t.level)})});for(var e=new Array(n+1),r=0;r<e.length;r++)e[r]=new Set;return t.forEach(function(t){t.hops.forEach(function(t){e[t.level].add(t.node)})}),e.map(function(t){return Array.from(t)})}(s),l=[],p=Infinity;return r=s.map(function(t,n){return n}),o=function(t){var n=function(t,n,e){var r=new Map;n.forEach(function(t){var n=0;u(t,e).forEach(function(t){f(t.hops,e).forEach(function(t){r.set(t,n),n+=1})})});var o=0;return t.forEach(function(t){for(var n=t.hops,e=0;e<n.length-1;e++)o+=Math.abs(r.get(n[e])-r.get(n[e+1]))}),o}(s,d,t);n<p&&(p=n,l=t)},c=Array.from(r),h=c.length,function t(n){if(n!==h){for(var e=c[n],r=n;r<h;r+=1){var i=c[r];c[r]=e,c[n]=i,t(n+1),c[r]=i}c[n]=e}else o(c.slice())}(0),d.forEach(function(t){t.forEach(function(t){t.hops=f(t.hops,l)})}),{traces:s,levels:d.map(function(t){return u(t,l)})}}function h(){return function(t){var n=t.points,e=t.horizontal,r=t.smoothness;return n.map(function(t,o){var i=t[0],a=t[1];if(0===o)return"M "+i+" "+a;var u=n[o-1],f=u[0],c=u[1],h=r*(e?i-f:0),s=r*(e?0:a-c);return"C "+(f+h)+" "+(c+s)+",  "+(i-h)+" "+(a-s)+", "+i+" "+a}).join(" ")}}function s(t){var e=t.horizontal,r=t.traceStops,o=Math.min.apply(Math,r.map(function(t){return t.start})),i=Math.max.apply(Math,r.map(function(t){return t.end})),a=[];return r.forEach(function(t){a.push({traceIndex:t.traceIndex,offset:(t.start-o)/(i-o)},{traceIndex:t.traceIndex,offset:(t.end-o)/(i-o)})}),{gradientUnits:"userSpaceOnUse",x1:e?0:o,y1:e?o:0,x2:e?0:i,y2:e?i:0,stops:n(a,"offset")}}function d(){for(var t=window.location.href.replace(/#.*/,"");;){var n="uid-"+Math.random();if(!document.getElementById(n)){var e="url("+t+"#"+n+")";return{id:n,toString:function(){return e}}}}}function l(){var t={horizontal:!1,traceWidth:function(){return 1},traceSmoothness:.5,levelMargin:10,hopLevel:function(t,n){return n},hopDefined:function(){return!0},nodeSize:function(){return[10,10]},nodeId:function(t,n,e,r){return r+"-"+n}};function r(t){var r=i.horizontal();if(r){var a=i.nodeSize;i.nodeSize=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];var e=a.apply(void 0,t);return[e[1],e[0]]}}var u=function(t,r){var o=Boolean(r.horizontal()),i=r.levelMargin(),a=r.traceSmoothness(),u=t.map(function(n,e){return r.traceWidth(n,e,t)}),f=c(t,r),h=f.traces,s=f.levels,d=new Map;s.forEach(function(t){t.forEach(function(t){var n={x:0,y:0,width:0,height:0,traceWidth:t.hops.reduce(function(t,n){return t+u[n.traceIndex]},0)};if(!t.virtual){var e=r.nodeSize({hops:t.hops.map(function(t){return t.origHop}),horizontal:Boolean(o)}),i=e[1];n.width=e[0],n.height=i}n.width=Math.max(n.width,n.traceWidth),d.set(t,n)})});var l=0;d.forEach(function(t){l=Math.max(t.width,l)});var p=n(u);s.forEach(function(t){var n=l;if(t.length>=2){var e=p.slice(t.length-1).reduce(function(t,n){return t+n},0);n=(l+e)/2}t.forEach(function(e,r){d.get(e).x+=(r-(t.length-1)/2)*n});var r=0,o=0;t.forEach(function(t){t.virtual?r=0:(r+=1,o=Math.max(r,o))}),t.forEach(function(n,e){var r=0;if(o>=2&&e%2==0){var i=0===e?0:d.get(t[e-1]).height,a=e===t.length-1?0:d.get(t[e+1]).height;r+=Math.max(i,a)}d.get(n).y=r})});var v=new Map;s.forEach(function(t){t.forEach(function(t){var n=d.get(t),e=0;t.hops.forEach(function(t){var r=u[t.traceIndex];v.set(t,{traceWidth:r,traceOffset:e,x:n.x+e+r/2-n.traceWidth/2,top:0,bottom:0}),e+=r})})}),h.forEach(function(t){for(var n=t.hops,e=1;e<n.length;e++){var r=n[e-1],o=v.get(r),u=v.get(n[e]),f=d.get(r.node),c=1.5*(1-a)*(2*i),h=1.5*(u.x-o.x),s=Math.sqrt(h*h+c*c),l=0;if(s>0){var p=h/s-(0!==h?c/h:0)*(1-c/s);l=h>0?(f.traceWidth-o.traceOffset-o.traceWidth)*p:-o.traceOffset*p}o.bottom=l,u.top=l}});var g=new Map,m=0;s.forEach(function(t,n){var e=0;t.forEach(function(t){t.hops.forEach(function(t){var n=v.get(t);e=Math.max(n.top,e)})});var r=0;t.forEach(function(t){var n=d.get(t);r=Math.max(r,n.height+n.y)}),g.set(n,{top:e,height:r,y:m}),m+=r+e+2*i});var x={nodes:[],traces:[],bounds:null};h.forEach(function(t,n){var e=[],r=t.hops;r.forEach(function(t,n){if(!t.virtual){for(var o=n-1;o>=0&&r[o].virtual;)o--;o>=0&&e.push({hops:r.slice(o,n+1),defined:r[o].defined&&t.defined})}});var f=e.splice(0,1);e.forEach(function(t){var n,e=f[f.length-1];Boolean(t.defined)===Boolean(e.defined)?(n=e.hops).push.apply(n,t.hops.slice(1)):f.push(t)}),f.map(function(t){var n=t.hops,e=t.defined,r=[];return n.forEach(function(t,e){var o=v.get(t),a=d.get(t.node),u=g.get(t.level);if(0!==e){var f=v.get(n[e-1]),c=g.get(n[e-1].level),h=c.y+c.top+c.height+f.bottom;r.push([f.x,h]),r.push([o.x,h+2*i]),e===n.length-1&&r.push([o.x,u.y+u.top+a.y+a.height/2])}else r.push([o.x,u.y+u.top+a.y+a.height/2])}),{points:r,defined:e}}).forEach(function(e){x.traces.push({index:n,width:u[n],hops:t.hops.map(function(t){return t.origHop}),defined:e.defined,points:e.points,smoothness:a,horizontal:o})})});var E=0===s.length?0:Infinity,b=0===s.length?0:-Infinity,y=0===s.length?0:Infinity,I=0===s.length?0:-Infinity;return s.forEach(function(t){t.forEach(function(t){var n=d.get(t),r=g.get(t.level),i=n.x-n.width/2,a=n.x+n.width/2,f=r.y+r.top+n.y,c=f+n.height;if(E=Math.min(i,E),b=Math.max(a,b),y=Math.min(f,y),I=Math.max(c,I),!t.virtual){var h=(i+a)/2-n.traceWidth/2,s=t.hops.map(function(t){return{start:h,end:h+=u[t.traceIndex],traceIndex:t.traceIndex}});x.nodes.push({bounds:new e(i,f,a,c),horizontal:o,hops:t.hops.map(function(t){return t.origHop}),traceIndexes:t.hops.map(function(t){return t.traceIndex}),traceStops:s})}})}),x.bounds=new e(E,y,b,I),x}(t,i);return r?{bounds:o(u.bounds),traces:u.traces.map(function(t){return Object.assign({},t,{points:t.points.map(function(t){return[t[1],t[0]]})})}),nodes:u.nodes.map(function(t){return Object.assign({},t,{bounds:o(t.bounds)})})}:u}var i={};return Object.keys(t).forEach(function(n){r[n]=function(e){return 0===arguments.length?t[n]:(t[n]=e,i[n]="function"==typeof e?e:function(){return e},r)},r[n](t[n])}),r}r.left.get=function(){return this._l},r.top.get=function(){return this._t},r.right.get=function(){return this._r},r.bottom.get=function(){return this._b},r.x.get=function(){return this.left},r.y.get=function(){return this.top},r.cx.get=function(){return(this.left+this.right)/2},r.cy.get=function(){return(this.top+this.bottom)/2},r.width.get=function(){return this.right-this.left},r.height.get=function(){return this.bottom-this.top},e.prototype.expanded=function(t,n,r,o){return void 0===n&&(n=t),void 0===r&&(r=t),void 0===o&&(o=n),new e(this.left-t,this.top-n,this.right+r,this.bottom+o)},Object.defineProperties(e.prototype,r);export{h as traceCurve,s as nodeGradient,d as genUID,l as tracegraph};
//# sourceMappingURL=index.mjs.map
