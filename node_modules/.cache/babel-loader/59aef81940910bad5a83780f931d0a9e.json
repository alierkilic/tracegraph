{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alican/Desktop/trace/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Graph } from \"react-d3-graph\"; //import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\n\nimport * as d3 from \"d3\";\nimport { tracegraph, traceCurve, nodeGradient, genUID } from \"./mytrec.js\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n}; //const graph = tracegraph();\n\nconst ttraces = [{\n  hops: [{\n    root: true\n  }, {\n    info: Object,\n    ip: \"172.19.0.1\",\n    ttl: 1\n  }, {\n    timeout: true,\n    ttl: 2\n  }, {\n    info: Object,\n    ip: \"10.68.66.202\",\n    ttl: 3\n  }, {\n    info: Object,\n    ip: \"138.197.249.36\",\n    ttl: 4\n  }]\n}]; //const layout = graph(traces);\n//console.log(layout);\n// the graph configuration, just override the ones you need\n\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\"\n  },\n  link: {\n    highlightColor: \"lightblue\"\n  }\n};\n\nconst onClickNode = function (nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst graph = tracegraph().horizontal(true).traceSmoothness(0.5).levelMargin(15).nodeSize(node => {\n  return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n}).hopDefined(hop => hop.ip || hop.root).hopLevel((hop, index) => index).traceWidth((_, index) => index === 0 ? 10 : 5.25).nodeId((hop, index) => {\n  return hop.ip || hop.root && \"root\" || `empty-${index}`;\n});\nconst {\n  bounds,\n  traces,\n  nodes\n} = graph(ttraces);\nconst svg = d3.select($refs.root).append(\"svg\");\nconst vb = bounds.expanded(1);\nsvg.attr(\"viewBox\", `${vb.x} ${vb.y} ${vb.width} ${vb.height}`).attr(\"width\", vb.width).attr(\"height\", vb.height);\nconst ids = nodes.map(() => genUID());\nconst defs = svg.append(\"defs\").selectAll(\".gradient\").data(nodes.map(nodeGradient));\nconst stops = defs.enter().append(\"linearGradient\").merge(defs).attr(\"id\", (_, i) => ids[i].id).attr(\"gradientUnits\", d => d.gradientUnits).attr(\"x1\", d => d.x1).attr(\"y1\", d => d.y1).attr(\"x2\", d => d.x2).attr(\"y2\", d => d.y2).selectAll(\"stop\").data(d => d.stops);\nstops.enter().append(\"stop\").merge(stops).attr(\"offset\", d => d.offset).attr(\"stop-color\", d => d3.schemeSet2[d.traceIndex % d3.schemeSet2.length]);\nconst traceLayer = svg.append(\"g\").attr(\"fill\", \"none\").selectAll(\"g\").data(traces).enter().append(\"g\");\ntraceLayer.filter(segment => segment.defined).append(\"path\").attr(\"d\", traceCurve()).attr(\"stroke-width\", d => d.width).attr(\"stroke\", \"white\");\ntraceLayer.append(\"path\").attr(\"d\", traceCurve()).attr(\"stroke-width\", d => d.width - 3).attr(\"stroke\", segment => d3.schemeSet2[segment.index % d3.schemeSet2.length]).attr(\"stroke-dasharray\", segment => segment.defined ? \"\" : \"4 2\");\nsvg.selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"fill\", \"white\").attr(\"stroke\", (_, i) => String(ids[i])).attr(\"stroke-width\", 2).attr(\"r\", ({\n  bounds\n}) => Math.min(bounds.width, bounds.height) / 2).attr(\"cx\", ({\n  bounds\n}) => bounds.cx).attr(\"cy\", ({\n  bounds\n}) => bounds.cy);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alican/Desktop/trace/src/App.js"],"names":["Graph","d3","tracegraph","traceCurve","nodeGradient","genUID","data","nodes","id","links","source","target","ttraces","hops","root","info","Object","ip","ttl","timeout","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","onClickNode","nodeId","window","alert","onClickLink","graph","horizontal","traceSmoothness","levelMargin","nodeSize","hopDefined","hop","hopLevel","index","traceWidth","_","bounds","traces","svg","select","$refs","append","vb","expanded","attr","x","y","width","height","ids","map","defs","selectAll","stops","enter","merge","i","d","gradientUnits","x1","y1","x2","y2","offset","schemeSet2","traceIndex","length","traceLayer","filter","segment","defined","String","Math","min","cx","cy","App","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\n//import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\n\nimport * as d3 from \"d3\";\nimport {\n  tracegraph,\n  traceCurve,\n  nodeGradient,\n  genUID\n} from \"./mytrec.js\";\n\n\n// graph payload (with minimalist structure)\nconst data = {\n  nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n  links: [\n    { source: \"Harry\", target: \"Sally\" },\n    { source: \"Harry\", target: \"Alice\" },\n  ],\n};\n\n//const graph = tracegraph();\n\nconst ttraces = [{hops: [{root: true}, {info: Object, ip: \"172.19.0.1\", ttl: 1}, {timeout: true, ttl: 2}, {info: Object, ip: \"10.68.66.202\", ttl: 3}, {info: Object, ip: \"138.197.249.36\", ttl: 4}]}]\n\n//const layout = graph(traces);\n\n//console.log(layout);\n\n// the graph configuration, just override the ones you need\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\",\n  },\n  link: {\n    highlightColor: \"lightblue\",\n  },\n};\n\nconst onClickNode = function(nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function(source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nconst graph = tracegraph()\n      .horizontal(true)\n      .traceSmoothness(0.5)\n      .levelMargin(15)\n      .nodeSize(node => {\n        return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n      })\n      .hopDefined(hop => hop.ip || hop.root)\n      .hopLevel((hop, index) => index)\n      .traceWidth((_, index) => (index === 0 ? 10 : 5.25))\n      .nodeId((hop, index) => {\n        return hop.ip || (hop.root && \"root\") || `empty-${index}`;\n      });\n    const { bounds, traces, nodes } = graph(ttraces);\n    const svg = d3.select($refs.root).append(\"svg\");\n    const vb = bounds.expanded(1);\n    svg\n      .attr(\"viewBox\", `${vb.x} ${vb.y} ${vb.width} ${vb.height}`)\n      .attr(\"width\", vb.width)\n      .attr(\"height\", vb.height);\n    const ids = nodes.map(() => genUID());\n    const defs = svg\n      .append(\"defs\")\n      .selectAll(\".gradient\")\n      .data(nodes.map(nodeGradient));\n    const stops = defs\n      .enter()\n      .append(\"linearGradient\")\n      .merge(defs)\n      .attr(\"id\", (_, i) => ids[i].id)\n      .attr(\"gradientUnits\", d => d.gradientUnits)\n      .attr(\"x1\", d => d.x1)\n      .attr(\"y1\", d => d.y1)\n      .attr(\"x2\", d => d.x2)\n      .attr(\"y2\", d => d.y2)\n      .selectAll(\"stop\")\n      .data(d => d.stops);\n    stops\n      .enter()\n      .append(\"stop\")\n      .merge(stops)\n      .attr(\"offset\", d => d.offset)\n      .attr(\n        \"stop-color\",\n        d => d3.schemeSet2[d.traceIndex % d3.schemeSet2.length]\n      );\n    const traceLayer = svg\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .selectAll(\"g\")\n      .data(traces)\n      .enter()\n      .append(\"g\");\n    traceLayer\n      .filter(segment => segment.defined)\n      .append(\"path\")\n      .attr(\"d\", traceCurve())\n      .attr(\"stroke-width\", d => d.width)\n      .attr(\"stroke\", \"white\");\n    traceLayer\n      .append(\"path\")\n      .attr(\"d\", traceCurve())\n      .attr(\"stroke-width\", d => d.width - 3)\n      .attr(\n        \"stroke\",\n        segment => d3.schemeSet2[segment.index % d3.schemeSet2.length]\n      )\n      .attr(\"stroke-dasharray\", segment => (segment.defined ? \"\" : \"4 2\"));\n    svg\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", (_, i) => String(ids[i]))\n      .attr(\"stroke-width\", 2)\n      .attr(\"r\", ({ bounds }) => Math.min(bounds.width, bounds.height) / 2)\n      .attr(\"cx\", ({ bounds }) => bounds.cx)\n      .attr(\"cy\", ({ bounds }) => bounds.cy);\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <Graph\n  graph\n/>;\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}