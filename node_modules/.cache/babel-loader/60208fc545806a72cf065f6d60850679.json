{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alican/Desktop/trace/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport * as d3 from \"d3\"; //import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\n\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n}; //const graph = tracegraph();\n//graph.horizontal(true);\n\nconst tracess = [{\n  hops: [{\n    root: true\n  }, {\n    info: Object,\n    ip: \"172.19.0.1\",\n    ttl: 1\n  }, {\n    timeout: true,\n    ttl: 2\n  }, {\n    info: Object,\n    ip: \"10.68.66.202\",\n    ttl: 3\n  }, {\n    info: Object,\n    ip: \"138.197.249.36\",\n    ttl: 4\n  }]\n}]; //const layout = graph(traces);\n//\n\nfunction Treemap() {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    const graph = tracegraph().horizontal(true).traceSmoothness(0.5).levelMargin(15).nodeSize(node => {\n      return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n    }).hopDefined(hop => hop.ip || hop.root).hopLevel((hop, index) => index).traceWidth((_, index) => index === 0 ? 10 : 5.25).nodeId((hop, index) => {\n      return hop.ip || hop.root && \"root\" || `empty-${index}`;\n    });\n    const {\n      bounds,\n      traces,\n      nodes\n    } = graph(tracess);\n    const svg = d3.select(ref.current).append(\"svg\");\n    const vb = bounds.expanded(1);\n    c;\n  }, []);\n  useEffect(() => {\n    draw();\n  }, [data]);\n\n  const draw = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n} //\n//const aa = traceCurve(layout);\n//console.log(layout);\n\n\n_s(Treemap, \"lq1tzM4DdcBd9rchfALtCTAkzkA=\");\n\n_c = Treemap;\nconsole.log(\"-----\"); //console.log(graph.hopLevel(2));\n// the graph configuration, just override the ones you need\n\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\"\n  },\n  link: {\n    highlightColor: \"lightblue\"\n  }\n};\n\nconst onClickNode = function (nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"template\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: \"root\",\n        style: \"display: inline-block; margin: 0; padding: 0; border: none;\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      id: \"graph-id\" // id is mandatory\n      ,\n      data: data,\n      config: myConfig,\n      onClickNode: onClickNode,\n      onClickLink: onClickLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Treemap\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/alican/Desktop/trace/src/App.js"],"names":["React","useRef","useEffect","Graph","d3","tracegraph","traceCurve","nodeGradient","genUID","data","nodes","id","links","source","target","tracess","hops","root","info","Object","ip","ttl","timeout","Treemap","ref","graph","horizontal","traceSmoothness","levelMargin","nodeSize","node","hopDefined","hop","hopLevel","index","traceWidth","_","nodeId","bounds","traces","svg","select","current","append","vb","expanded","c","draw","console","log","myConfig","nodeHighlightBehavior","color","size","highlightStrokeColor","link","highlightColor","onClickNode","window","alert","onClickLink","App","logo"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\nimport * as d3 from \"d3\";\n//import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\";\n\n\n\n// graph payload (with minimalist structure)\nconst data = {\n  nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n  links: [\n    { source: \"Harry\", target: \"Sally\" },\n    { source: \"Harry\", target: \"Alice\" },\n  ],\n};\n\n//const graph = tracegraph();\n//graph.horizontal(true);\n\n\n\nconst tracess = [{hops: [{root: true}, {info: Object, ip: \"172.19.0.1\", ttl: 1}, {timeout: true, ttl: 2}, {info: Object, ip: \"10.68.66.202\", ttl: 3}, {info: Object, ip: \"138.197.249.36\", ttl: 4}]}]\n\n\n//const layout = graph(traces);\n\n//\n\n\n\nfunction Treemap(){\n  const ref = useRef();\n\n  useEffect(() => {\n    const graph = tracegraph()\n      .horizontal(true)\n      .traceSmoothness(0.5)\n      .levelMargin(15)\n      .nodeSize(node => {\n        return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n      })\n      .hopDefined(hop => hop.ip || hop.root)\n      .hopLevel((hop, index) => index)\n      .traceWidth((_, index) => (index === 0 ? 10 : 5.25))\n      .nodeId((hop, index) => {\n        return hop.ip || (hop.root && \"root\") || `empty-${index}`;\n      });\n      const { bounds, traces, nodes } = graph(tracess);\n\n    const svg = d3.select(ref.current).append(\"svg\");\n    const vb = bounds.expanded(1);\n      c\n  }, []);\n\n  useEffect(() => {\n      draw();\n  }, [data]);\n\n  const draw = () => {\n      \n  }\n\n\n  return (\n      <div className=\"chart\">\n          <svg ref={ref}>\n          </svg>\n      </div>\n      \n  )\n\n}\n\n\n\n//\n\n\n\n\n\n\n\n\n\n//const aa = traceCurve(layout);\n\n//console.log(layout);\nconsole.log(\"-----\");\n//console.log(graph.hopLevel(2));\n\n\n// the graph configuration, just override the ones you need\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\",\n  },\n  link: {\n    highlightColor: \"lightblue\",\n  },\n};\n\nconst onClickNode = function(nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function(source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <template>\n  <div ref=\"root\" style=\"display: inline-block; margin: 0; padding: 0; border: none;\">\n  </div>\n</template>\n\n\n   \n      <Graph\n  id=\"graph-id\" // id is mandatory\n  data={data}\n  config={myConfig}\n  onClickNode={onClickNode}\n  onClickLink={onClickLink}\n/>;\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}