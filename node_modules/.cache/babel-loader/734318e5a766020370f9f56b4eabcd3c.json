{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alican/Desktop/trace/src/tmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport { Graph } from \"react-d3-graph\";\nimport * as d3 from \"d3\"; //import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\n\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n}; //const graph = tracegraph();\n//graph.horizontal(true);\n\nconst tracess = [{\n  hops: [{\n    root: true\n  }, {\n    info: Object,\n    ip: \"172.19.0.1\",\n    ttl: 1\n  }, {\n    timeout: true,\n    ttl: 2\n  }, {\n    info: Object,\n    ip: \"10.68.66.202\",\n    ttl: 3\n  }, {\n    info: Object,\n    ip: \"138.197.249.36\",\n    ttl: 4\n  }, {\n    info: Object,\n    ip: \"138.197.250.135\",\n    ttl: 5\n  }, {\n    info: Object,\n    ip: \"195.219.50.41\",\n    ttl: 6\n  }, {\n    info: Object,\n    ip: \"80.231.65.20\",\n    ttl: 7\n  }, {\n    info: Object,\n    ip: \"5.23.30.16\",\n    ttl: 8\n  }, {\n    info: Object,\n    ip: \"5.23.30.23\",\n    ttl: 9\n  }, {\n    info: Object,\n    ip: \"80.231.6.5\",\n    ttl: 10\n  }, {\n    info: Object,\n    ip: \"217.65.185.115\",\n    ttl: 11\n  }, {\n    timeout: true,\n    ttl: 12\n  }, {\n    timeout: true,\n    ttl: 13\n  }, {\n    info: Object,\n    ip: \"46.1.252.113\",\n    ttl: 14\n  }]\n}, {\n  hops: [{\n    root: true\n  }, {\n    info: Object,\n    ip: \"172.19.0.1\",\n    ttl: 1\n  }, {\n    timeout: true,\n    ttl: 2\n  }, {\n    info: Object,\n    ip: \"10.68.66.204\",\n    ttl: 3\n  }, {\n    info: Object,\n    ip: \"138.197.249.42\",\n    ttl: 4\n  }, {\n    info: Object,\n    ip: \"138.197.250.149\",\n    ttl: 5\n  }, {\n    info: Object,\n    ip: \"195.219.50.89\",\n    ttl: 6\n  }, {\n    info: Object,\n    ip: \"80.231.65.20\",\n    ttl: 7\n  }, {\n    info: Object,\n    ip: \"5.23.30.16\",\n    ttl: 8\n  }, {\n    info: Object,\n    ip: \"5.23.30.23\",\n    ttl: 9\n  }, {\n    info: Object,\n    ip: \"80.231.6.5\",\n    ttl: 10\n  }, {\n    info: Object,\n    ip: \"217.65.185.115\",\n    ttl: 11\n  }, {\n    timeout: true,\n    ttl: 12\n  }, {\n    timeout: true,\n    ttl: 13\n  }, {\n    info: Object,\n    ip: \"46.1.252.113\",\n    ttl: 14\n  }]\n}]; //const layout = graph(traces);\n//\n\nfunction Treemap() {\n  _s();\n\n  const ref = useRef();\n  const graph = tracegraph().horizontal(true).traceSmoothness(0.5).levelMargin(15).nodeSize(node => {\n    return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n  }).hopDefined(hop => hop.ip || hop.root).hopLevel((hop, index) => index).traceWidth((_, index) => index === 0 ? 10 : 5.25).nodeId((hop, index) => {\n    return hop.ip || hop.root && \"root\" || `empty-${index}`;\n  });\n  const {\n    bounds,\n    traces,\n    nodes\n  } = graph(tracess);\n  const svg = d3.select(ref.current).append(\"svg\");\n  const vb = bounds.expanded(1);\n  svg.attr(\"viewBox\", `${10} ${0} ${vb.width} ${vb.height}`).attr(\"width\", vb.width).attr(\"height\", vb.height);\n  const ids = nodes.map(() => genUID());\n  const defs = svg.append(\"defs\").selectAll(\".gradient\").data(nodes.map(nodeGradient));\n  const stops = defs.enter().append(\"linearGradient\").merge(defs).attr(\"id\", (_, i) => ids[i].id).attr(\"gradientUnits\", d => d.gradientUnits).attr(\"x1\", d => d.x1).attr(\"y1\", d => d.y1).attr(\"x2\", d => d.x2).attr(\"y2\", d => d.y2).selectAll(\"stop\").data(d => d.stops);\n  stops.enter().append(\"stop\").merge(stops).attr(\"offset\", d => d.offset).attr(\"stop-color\", d => d3.schemeSet2[d.traceIndex % d3.schemeSet2.length]);\n  const traceLayer = svg.append(\"g\").attr(\"fill\", \"none\").selectAll(\"g\").data(traces).enter().append(\"g\");\n  traceLayer.filter(segment => segment.defined).append(\"path\").attr(\"d\", traceCurve()).attr(\"stroke-width\", d => d.width).attr(\"stroke\", \"white\");\n  traceLayer.append(\"path\").attr(\"d\", traceCurve()).attr(\"stroke-width\", d => d.width - 3).attr(\"stroke\", segment => d3.schemeSet2[segment.index % d3.schemeSet2.length]).attr(\"stroke-dasharray\", segment => segment.defined ? \"\" : \"4 2\");\n  svg.selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"fill\", \"white\").attr(\"stroke\", (_, i) => String(ids[i])).attr(\"stroke-width\", 2).attr(\"r\", ({\n    bounds\n  }) => Math.min(bounds.width, bounds.height) / 2).attr(\"cx\", ({\n    bounds\n  }) => bounds.cx).attr(\"cy\", ({\n    bounds\n  }) => bounds.cy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Treemap, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = Treemap;\nexport default Treemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treemap\");","map":{"version":3,"sources":["/Users/alican/Desktop/trace/src/tmap.js"],"names":["React","useRef","useEffect","Graph","d3","tracegraph","traceCurve","nodeGradient","genUID","data","nodes","id","links","source","target","tracess","hops","root","info","Object","ip","ttl","timeout","Treemap","ref","graph","horizontal","traceSmoothness","levelMargin","nodeSize","node","hopDefined","hop","hopLevel","index","traceWidth","_","nodeId","bounds","traces","svg","select","current","append","vb","expanded","attr","width","height","ids","map","defs","selectAll","stops","enter","merge","i","d","gradientUnits","x1","y1","x2","y2","offset","schemeSet2","traceIndex","length","traceLayer","filter","segment","defined","String","Math","min","cx","cy"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect } from 'react';\nimport logo from './logo.svg';\n\nimport { Graph } from \"react-d3-graph\";\nimport * as d3 from \"d3\";\n//import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\";\n\n\n\n// graph payload (with minimalist structure)\nconst data = {\n  nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n  links: [\n    { source: \"Harry\", target: \"Sally\" },\n    { source: \"Harry\", target: \"Alice\" },\n  ],\n};\n\n//const graph = tracegraph();\n//graph.horizontal(true);\n\n\n\nconst tracess = [{hops: [{root: true}, {info: Object, ip: \"172.19.0.1\", ttl: 1}, {timeout: true, ttl: 2}, {info: Object, ip: \"10.68.66.202\", ttl: 3}, {info: Object, ip: \"138.197.249.36\", ttl: 4}, {info: Object, ip: \"138.197.250.135\", ttl: 5},{info: Object, ip: \"195.219.50.41\", ttl: 6},\n{info: Object, ip: \"80.231.65.20\", ttl: 7},{info: Object, ip: \"5.23.30.16\", ttl: 8},{info: Object, ip: \"5.23.30.23\", ttl: 9},{info: Object, ip: \"80.231.6.5\", ttl: 10},{info: Object, ip: \"217.65.185.115\", ttl: 11},{timeout: true, ttl: 12},{timeout: true, ttl: 13},\n{info: Object, ip: \"46.1.252.113\", ttl: 14}]}, {hops: [{root: true}\n    ,{info: Object, ip: \"172.19.0.1\", ttl: 1}\n    ,{timeout: true, ttl: 2}\n    ,{info: Object, ip: \"10.68.66.204\", ttl: 3}\n    ,{info: Object, ip: \"138.197.249.42\", ttl: 4}\n    ,{info: Object, ip: \"138.197.250.149\", ttl: 5}\n    ,{info: Object, ip: \"195.219.50.89\", ttl: 6}\n    ,{info: Object, ip: \"80.231.65.20\", ttl: 7}\n    ,{info: Object, ip: \"5.23.30.16\", ttl: 8}\n    ,{info: Object, ip: \"5.23.30.23\", ttl: 9}\n    ,{info: Object, ip: \"80.231.6.5\", ttl: 10}\n    ,{info: Object, ip: \"217.65.185.115\", ttl: 11}\n    ,{timeout: true, ttl: 12}\n    ,{timeout: true, ttl: 13}\n    ,{info: Object, ip: \"46.1.252.113\", ttl: 14}]}]\n\n\n//const layout = graph(traces);\n\n//\n\n\n\nfunction Treemap(){\n  const ref = useRef();\n\n\n    const graph = tracegraph()\n      .horizontal(true)\n      .traceSmoothness(0.5)\n      .levelMargin(15)\n      .nodeSize(node => {\n        return node.hops[0].ip || node.hops[0].root ? [30, 30] : [10, 10];\n      })\n      .hopDefined(hop => hop.ip || hop.root)\n      .hopLevel((hop, index) => index)\n      .traceWidth((_, index) => (index === 0 ? 10 : 5.25))\n      .nodeId((hop, index) => {\n        return hop.ip || (hop.root && \"root\") || `empty-${index}`;\n      });\n      const { bounds, traces, nodes } = graph(tracess);\n\n    const svg = d3.select(ref.current).append(\"svg\");\n    const vb = bounds.expanded(1);\n    svg\n      .attr(\"viewBox\", `${10} ${0} ${vb.width} ${vb.height}`)\n      .attr(\"width\", vb.width)\n      .attr(\"height\", vb.height);\n    const ids = nodes.map(() => genUID());\n    const defs = svg\n      .append(\"defs\")\n      .selectAll(\".gradient\")\n      .data(nodes.map(nodeGradient));\n    const stops = defs\n      .enter()\n      .append(\"linearGradient\")\n      .merge(defs)\n      .attr(\"id\", (_, i) => ids[i].id)\n      .attr(\"gradientUnits\", d => d.gradientUnits)\n      .attr(\"x1\", d => d.x1)\n      .attr(\"y1\", d => d.y1)\n      .attr(\"x2\", d => d.x2)\n      .attr(\"y2\", d => d.y2)\n      .selectAll(\"stop\")\n      .data(d => d.stops);\n    stops\n      .enter()\n      .append(\"stop\")\n      .merge(stops)\n      .attr(\"offset\", d => d.offset)\n      .attr(\n        \"stop-color\",\n        d => d3.schemeSet2[d.traceIndex % d3.schemeSet2.length]\n      );\n    const traceLayer = svg\n      .append(\"g\")\n      .attr(\"fill\", \"none\")\n      .selectAll(\"g\")\n      .data(traces)\n      .enter()\n      .append(\"g\");\n    traceLayer\n      .filter(segment => segment.defined)\n      .append(\"path\")\n      .attr(\"d\", traceCurve())\n      .attr(\"stroke-width\", d => d.width)\n      .attr(\"stroke\", \"white\");\n    traceLayer\n      .append(\"path\")\n      .attr(\"d\", traceCurve())\n      .attr(\"stroke-width\", d => d.width - 3)\n      .attr(\n        \"stroke\",\n        segment => d3.schemeSet2[segment.index % d3.schemeSet2.length]\n      )\n      .attr(\"stroke-dasharray\", segment => (segment.defined ? \"\" : \"4 2\"));\n    svg\n      .selectAll(\"circle\")\n      .data(nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", (_, i) => String(ids[i]))\n      .attr(\"stroke-width\", 2)\n      .attr(\"r\", ({ bounds }) => Math.min(bounds.width, bounds.height) / 2)\n      .attr(\"cx\", ({ bounds }) => bounds.cx)\n      .attr(\"cy\", ({ bounds }) => bounds.cy);\n      \n\n\n\n  return (\n      <div className=\"chart\">\n          <svg ref={ref}>\n          </svg>\n      </div>\n      \n  )\n\n}\n\nexport default Treemap;"]},"metadata":{},"sourceType":"module"}