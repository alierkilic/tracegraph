{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alican/Desktop/trace/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Graph } from \"react-d3-graph\"; //import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\n\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\";\nimport * as d3 from \"d3\"; // graph payload (with minimalist structure)\n\nconst data = {\n  nodes: [{\n    id: \"Harry\"\n  }, {\n    id: \"Sally\"\n  }, {\n    id: \"Alice\"\n  }],\n  links: [{\n    source: \"Harry\",\n    target: \"Sally\"\n  }, {\n    source: \"Harry\",\n    target: \"Alice\"\n  }]\n};\nconst graph = tracegraph();\nconst traces = [{\n  hops: [{\n    root: true\n  }, {\n    info: Object,\n    ip: \"172.19.0.1\",\n    ttl: 1\n  }, {\n    timeout: true,\n    ttl: 2\n  }, {\n    info: Object,\n    ip: \"10.68.66.202\",\n    ttl: 3\n  }, {\n    info: Object,\n    ip: \"138.197.249.36\",\n    ttl: 4\n  }]\n}];\nconst layout = graph(traces);\nconsole.log(layout);\nconst svg = d3.svg;\nsvg.selectAll(\".trace\").data(layout.traces).enter().append(\"path\").attr(\"class\", \"trace\").attr(\"d\", traceCurve());\nconst ids = layout.nodes.map(() => genUID());\nsvg.append(\"defs\").selectAll(\"linearGradient\").data(layout.nodes.map(nodeGradient)).enter().append(\"linearGradient\").attr(\"id\", (d, i) => ids[i].id).attr(\"gradientUnits\", d => d.gradientUnits).attr(\"x1\", d => d.x1).attr(\"y1\", d => d.y1).attr(\"x2\", d => d.x2).attr(\"y2\", d => d.y2).selectAll(\"stop\").data(d => d.stops).enter().append(\"stop\").attr(\"offset\", d => d.offset).attr(\"stop-color\", d => [\"red\", \"green\", \"blue\"][d.traceIndex % 3]);\nsvg.selectAll(\"circle\").data(layout.nodes).enter().append(\"circle\").attr(\"fill\", \"white\").attr(\"stroke\", (d, i) => ids[i]).attr(\"r\", d => 10).attr(\"cx\", d => d.bounds.cx).attr(\"cy\", d => d.bounds.cy); // the graph configuration, just override the ones you need\n\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\"\n  },\n  link: {\n    highlightColor: \"lightblue\"\n  }\n};\n\nconst onClickNode = function (nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function (source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      id: \"graph-id\" // id is mandatory\n      ,\n      data: data,\n      config: myConfig,\n      onClickNode: onClickNode,\n      onClickLink: onClickLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alican/Desktop/trace/src/App.js"],"names":["Graph","tracegraph","traceCurve","nodeGradient","genUID","d3","data","nodes","id","links","source","target","graph","traces","hops","root","info","Object","ip","ttl","timeout","layout","console","log","svg","selectAll","enter","append","attr","ids","map","d","i","gradientUnits","x1","y1","x2","y2","stops","offset","traceIndex","bounds","cx","cy","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","onClickNode","nodeId","window","alert","onClickLink","App","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Graph } from \"react-d3-graph\";\n//import { sorted } from \"./util\";\n//import { Rect, flippedRect } from \"./rect\";\n//import calc from \"./calc\";\nimport { tracegraph } from \"@hownetworks/tracegraph\";\nimport { traceCurve, nodeGradient, genUID } from \"@hownetworks/tracegraph\";\nimport * as d3 from \"d3\";\n\n\n\n// graph payload (with minimalist structure)\nconst data = {\n  nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n  links: [\n    { source: \"Harry\", target: \"Sally\" },\n    { source: \"Harry\", target: \"Alice\" },\n  ],\n};\n\nconst graph = tracegraph();\n\nconst traces = [{hops: [{root: true}, {info: Object, ip: \"172.19.0.1\", ttl: 1}, {timeout: true, ttl: 2}, {info: Object, ip: \"10.68.66.202\", ttl: 3}, {info: Object, ip: \"138.197.249.36\", ttl: 4}]}]\n\n\nconst layout = graph(traces);\n\nconsole.log(layout)\n\nconst svg = d3.svg;\n\n  svg\n  .selectAll(\".trace\")\n  .data(layout.traces)\n  .enter()\n  .append(\"path\")\n  .attr(\"class\", \"trace\")\n  .attr(\"d\", traceCurve());\n\n  const ids = layout.nodes.map(() => genUID());\n\n  svg.append(\"defs\")\n    .selectAll(\"linearGradient\")\n    .data(layout.nodes.map(nodeGradient))\n    .enter().append(\"linearGradient\")\n      .attr(\"id\", (d, i) => ids[i].id)\n      .attr(\"gradientUnits\", d => d.gradientUnits)\n      .attr(\"x1\", d => d.x1)\n      .attr(\"y1\", d => d.y1)\n      .attr(\"x2\", d => d.x2)\n      .attr(\"y2\", d => d.y2)\n    .selectAll(\"stop\")\n    .data(d => d.stops)\n    .enter().append(\"stop\")\n      .attr(\"offset\", d => d.offset)\n      .attr(\"stop-color\", d => [\"red\", \"green\", \"blue\"][d.traceIndex % 3]);\n  \n  svg.selectAll(\"circle\")\n    .data(layout.nodes)\n    .enter().append(\"circle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", (d, i) => ids[i])\n      .attr(\"r\", d => 10)\n      .attr(\"cx\", d => d.bounds.cx)\n      .attr(\"cy\", d => d.bounds.cy);\n\n\n// the graph configuration, just override the ones you need\nconst myConfig = {\n  nodeHighlightBehavior: true,\n  node: {\n    color: \"lightgreen\",\n    size: 120,\n    highlightStrokeColor: \"blue\",\n  },\n  link: {\n    highlightColor: \"lightblue\",\n  },\n};\n\nconst onClickNode = function(nodeId) {\n  window.alert(`Clicked node ${nodeId}`);\n};\n\nconst onClickLink = function(source, target) {\n  window.alert(`Clicked link between ${source} and ${target}`);\n};\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      \n      <Graph\n  id=\"graph-id\" // id is mandatory\n  data={data}\n  config={myConfig}\n  onClickNode={onClickNode}\n  onClickLink={onClickLink}\n/>;\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}